Bom dia/Boa tarde, me chamo Felipe Avencourt. Hoje, farei uma breve apresentação da pesquisa científica em análise de códigos e redes programáveis que elaborei no ano passado e neste ano, orientado pelo prof dr. Lisandro e supervisionado pelo prof. Éder.

- Slide 2 -

Bom inicialmente, gostaria de definir um dos conceitos centrais que regeram o estudo. Uma rede programável é uma disposição conexa entre dispositivos onde hardware ou software gerencia dinâmicamente a comunicação. Para ambito de software, um controlador fundamentado por código faz o papel gerenciador, separando o plano de controle com o plano de dados. Essa separação traz benefícios de centralização de controle, monitoramento em tempo integral, flexibilização de rede. Atualmente, alguns dos protocolos existentes para controladores são NETCONF, gRPC e OPENFLOW. Nesta pesquisa foi solicitado as IAs controladores fundamentados em OPENFLOW.

- Slide 3 -

Na escolha das inteligências artificiais foram estabelecidos os critérios de popularidade e visão técnica com intuito de delimitar e buscar diferentes representatividade das inumeras vigentes no mercado. Com base nesses filtros, foram escolhidas: ChatGPT, Blackbox, DeepSeek e CoPilot para elaborarem as respostas das tarefas definidas pelos prompts.

- Slide 4 -

Em cada tarefa, foram estabelecidos duas abordagens de prompts zero-shot e few-shot. A técnica zero-shot, é uma abordagem simples e direta, podendo ser livre de contextos, abrangendo resultados amplas ou ambíguos. Por outro lado, para solucionar isso, e aprimorar respostas, a técnica few-shot utiliza de contextos e exemplos para elaboração do prompt. 

- Slide 5 -

Com o plano de controle estabelecido, fica em aberto o plano de dados, através disso, foram definidos as seguintes topologias de rede: Linear, Estrela, Totalmente conectada e dois switches.

- Slide 6 -

Para mais simples, foi confecionado o seguinte prompt: Desenvolva em python, um controlador pox para redes programáveis por software.

- Slide 7 -

Resultando os seguintes resultados de funcionalidade... Gostaria de ressaltar que embora a lógica desenvolvida fosse bastante semelhante, o ChatGPT e DeepSeek implementaram uma melhoria não explícita na definição da tarefa, aprendizado MAC.

- Slide 8 -

Com a abordagem few-shot, foi contextualizado o que tinha sido elaborado previamente antes de solicitar a tarefa.

- Slide 9 -

A abordagem resultou em códigos funcionais para todas as topologias. Sendo a mais notável diferença das implementações conceitos de engenharia de software.

- Slide 10 -

Para a segunda tarefa foi inserido uma restrição de comunicação com intuito de verificar como iriam solucionar a nova tarefa proposta.

- Slide 11 -

Novamente, resultaram em respostas funcionais e o que antes aprendizado MAC que o GPT e DeepSeek desenvolveram, não implementaram, entretanto o GPT foi o único que definiu um método para a restrição estabelecida.

- Slide 12 -

Nesta tarefa 2, com a abordagem few-shot, de maneira análoga a tarefa anterior foi explorado o contexto além da solicitação de mudança em um parâmetro, o timeout.

- Slide 13 -

No momento das analises para esta tarefa, as IAs: GPT, DeepSeek e Copilot erros variados em seus códigos, como: erro de lógica no direcionamento de pacotes, mau uso de biblioteca. O que em uma supervisão para localizar o erro foi solucionada com uma segunda interação.

- Slide 14 -

Para a ultima tarefa, foi solicitado para que as LLMs implementassem um firewall de terceira camada.

- Slide 15 -

Após os testes de funcionamento, o blackbox não conseguiu desenvolver o controlador funcional, mesmo após algumas interações para correção de erros. Por outro lado, as outras conseguiram corrigir e resultar em controladores funcionais. Algo esperado devido a ser uma tarefa mais complexa.

- Slide 16 -

Neste ultimo prompt além de contextualizar o que seria solicitado, foi informado para considerar uma função com intuito de verificar a compreensão de integração de código.

- Slide 17 -

Como podemos observar, as ferramentas conseguiram desenvolver firewalls funcionais sendo o GPT e Copilot com processamento de comunicação por IP, e DeepSeek e Blackbox estabelencendo um server TCP como base.

